Basic commands in Git:

     git init  This command creates a new, empty Git repository. It adds a hidden .git folder to your project directory, which Git uses to store all the information about your repository.
     
     git config  This command is used to configure your Git settings. For example, you can use it to set your name and email address, which will be associated with your commits. You can also set the default branch name to `main`, which is now standard practice.
     
     git status  This command shows you the current state of your repository. It tells you which files are modified, which files are staged for commit, and which files are untracked.
     
     git add  This command adds files to the staging area. When you add a file, Git starts tracking it and includes it in the next commit.
     
     git commit  This command creates a new commit. A commit is like a snapshot of your repository at a specific point in time. Each commit has a message associated with it, which describes the changes that were made in that commit. 
     
     git log  This command shows you the history of your commits. You can see the commit message, the author of the commit, the date and time of the commit, and the commit hash.
     
     git branch  This command is used to create, list, rename and delete branches. A branch is a parallel version of your project. You can create a new branch to work on a new feature without affecting the main branch.
     
     git checkout  This command is used to switch between branches. When you check out a branch, Git updates your working directory to reflect the state of that branch.
     
     git merge  This command is used to merge two branches together. When you merge a branch, Git combines the changes from that branch into the current branch.
     
     git push  This command is used to push your local commits to a remote repository. A remote repository is a copy of your repository that is hosted on a server, such as GitHub or GitLab.
     
     git pull  This command is used to pull changes from a remote repository to your local repository. This ensures that your local repository is up to date with the latest changes.

